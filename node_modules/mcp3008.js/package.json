{
  "name": "mcp3008.js",
  "version": "0.2.0",
  "author": {
    "name": "Ricco Forgaard",
    "email": "ricco@fiskeben.dk"
  },
  "description": "Read values from MCP3008 ADC using SPI.",
  "main": "./mcp3008.js",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/fiskeben/mcp3008.js"
  },
  "dependencies": {
    "spi": "git://github.com/RussTheAerialist/node-spi.git"
  },
  "readme": "# mcp3008.js\n\nA node.js module for interfacing the MCP3008 analog/digital converter.\n\nThe same instance of the module can control all eight channels on the converter.\n\n## Installation\n\n```\n$ npm install mcp3008.js\n```\n\n## Usage\n\nHere's a short example:\n\n```\nvar Mcp3008 = require('mcp3008.js'),\n    adc = new Mcp3008(),\n    channel = 0;\n\nadc.read(channel, function (value) {\n    doSomethingToValue(value);\n});\n```\n\n## Interface\n\n### Constructor\n\n```\nnew Mcp3008([device]);\n```\n\nDevice defaults to `/dev/spidev0.0`.\n\n### Reading\n\n```\ninstance.read(channel, callback);\n```\n\nThis will read the value on `channel` and send it to `callback`.\n\n### Polling\n\n```\ninstance.poll(channel, interval, callback);\n```\n\nThis will read the value on `channel` every `interval` milliseconds and send it to `callback`. Use `instance.stop(channel)` to stop it.\n\n### Tear down\n\n```\ninstance.close();\n```\n\nThis will release the device and stop polling (if any).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/fiskeben/mcp3008.js/issues"
  },
  "_id": "mcp3008.js@0.2.0",
  "dist": {
    "shasum": "5c3a11084096d7eed7c5aae94a5261ea4a1edb39",
    "tarball": "http://registry.npmjs.org/mcp3008.js/-/mcp3008.js-0.2.0.tgz"
  },
  "_from": "mcp3008.js@*",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "fiskeben",
    "email": "ricco@fiskeben.dk"
  },
  "maintainers": [
    {
      "name": "fiskeben",
      "email": "ricco@fiskeben.dk"
    }
  ],
  "directories": {},
  "_shasum": "5c3a11084096d7eed7c5aae94a5261ea4a1edb39",
  "_resolved": "https://registry.npmjs.org/mcp3008.js/-/mcp3008.js-0.2.0.tgz"
}
